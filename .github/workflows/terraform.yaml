name: deploy-destroy

on:
  workflow_dispatch: #! Permite ejecutar manualmente el flujo de trabajo

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.1

      - name: Instalar PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          extensions: mbstring, xml
          tools: composer

      - name: Actualizar Composer
        run: |
          cd WebPhpEc2
          composer update

      - name: Darle permisos a PHPUnit
        run: |
          cd WebPhpEc2
          chmod +x ./vendor/bin/phpunit

      - name: Ejecutar PHPUnit
        id: phpunit-tests
        run: |
          cd WebPhpEc2
          ./vendor/bin/phpunit tests || exit 1

      - name: Verificar resultado de los tests
        if: success()
        run: echo "✅ Los tests pasaron correctamente."

      - name: Verificar fallos en los tests
        if: failure()
        run: echo "❌ Algunos tests fallaron."

      - name: Pasar tokens a AWS
        if: success() # Solo se ejecuta si los tests pasan
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: "us-east-1"

      - name: Hacer el setup de Terraform
        if: success() # Solo se ejecuta si los tests pasan
        uses: hashicorp/setup-terraform@v3

      - name: Inicializar Terraform
        if: success() # Solo se ejecuta si los tests pasan
        working-directory: ./Terraform
        run: terraform init

      - name: Plan de Terraform
        if: success() # Solo se ejecuta si los tests pasan
        working-directory: ./Terraform
        run: terraform plan -no-color

      - name: Apply Terraform
        if: success() # Solo se ejecuta si los tests pasan
        working-directory: ./Terraform
        run: terraform apply -auto-approve

      - name: Subit tfState a mi bucket S3
        if: success()
        run: |
          aws s3 cp Terraform/terraform.tfstate s3://githubactionsterraformstate/ruta/terraform.tfstate

      - name: Subir tfstate como artefacto
        if: success() # Solo se ejecuta si los tests pasan
        uses: actions/upload-artifact@v4.4.3
        with:
          name: terraform-tfstate
          path: Terraform/terraform.tfstate

  destroy: #! Job para destruir la infraestructura
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.1

      - name: Descargar tfstate como artefacto
        uses: actions/download-artifact@v4.1.8
        with:
          name: terraform-tfstate
          path: .

      - name: Mover tfstate al directorio correcto
        run: mv ./terraform.tfstate ./Terraform/terraform.tfstate

      - name: pasar mis tokens a aws
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: "us-east-1"

      - name: Hacer el set up de tf
        uses: hashicorp/setup-terraform@v3

      - name: inicializar terraform
        working-directory: ./Terraform
        run: terraform init

      - name: destroy terraform
        working-directory: ./Terraform
        run: terraform destroy -auto-approve #! Destruir la infraestructura automáticamente
